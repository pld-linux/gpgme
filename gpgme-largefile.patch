--- gpgme-1.3.1/src/gpgme-config.in.orig	2011-04-07 14:24:03.000000000 +0200
+++ gpgme-1.3.1/src/gpgme-config.in	2011-06-18 08:59:14.834695342 +0200
@@ -45,6 +45,10 @@
 cflags_glib="@GLIB_CFLAGS@"
 with_glib=
 
+if test "0@NEED__FILE_OFFSET_BITS@" -gt "0" ; then
+    cflags_lfs="-D_FILE_OFFSET_BITS=@NEED__FILE_OFFSET_BITS@"
+fi
+
 output=""
 
 usage()
@@ -136,6 +140,9 @@
                   result="$result $i"
               fi
             done
+	    if test "x$cflags_lfs" != "x"; then
+		output="$output $cflags_lfs"
+	    fi
             output="$output $result"
             ;;
 	--libs)
--- gpgme-1.7.0/configure.ac.orig	2016-09-21 09:18:01.000000000 +0200
+++ gpgme-1.7.0/configure.ac	2016-10-08 08:46:21.898705647 +0200
@@ -529,15 +529,18 @@
 # A simple compile time check in gpgme.h for GNU/Linux systems that
 # prevents a file offset bits mismatch between gpgme and the application.
 NEED__FILE_OFFSET_BITS=0
+FILE_OFFSET_BITS_CPPFLAGS=
 if test "$have_w32_system" != yes; then
   case "$ac_cv_sys_file_offset_bits" in
     "" | no | unknown) ;;
     *)
     NEED__FILE_OFFSET_BITS=$ac_cv_sys_file_offset_bits
+    FILE_OFFSET_BITS_CPPFLAGS="-D_FILE_OFFSET_BITS=$ac_cv_sys_file_offset_bits"
     ;;
   esac
 fi
 AC_SUBST(NEED__FILE_OFFSET_BITS)
+AC_SUBST(FILE_OFFSET_BITS_CPPFLAGS)
 
 # Figure out platform dependent typedefs for gpgme.h
 if test "$have_w32_system" = yes; then
