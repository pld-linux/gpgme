--- gpgme-1.3.1/src/gpgme-config.in.orig	2011-04-07 14:24:03.000000000 +0200
+++ gpgme-1.3.1/src/gpgme-config.in	2011-06-18 08:59:14.834695342 +0200
@@ -45,6 +45,10 @@
 cflags_glib="@GLIB_CFLAGS@"
 with_glib=
 
+if test "0@NEED__FILE_OFFSET_BITS@" -gt "0" ; then
+    cflags_lfs="-D_FILE_OFFSET_BITS=@NEED__FILE_OFFSET_BITS@"
+fi
+
 output=""
 
 usage()
@@ -136,6 +140,9 @@
                   result="$result $i"
               fi
             done
+	    if test "x$cflags_lfs" != "x"; then
+		output="$output $cflags_lfs"
+	    fi
             output="$output $result"
             ;;
 	--libs)
--- gpgme-1.7.0/configure.ac.orig	2016-09-21 09:18:01.000000000 +0200
+++ gpgme-1.7.0/configure.ac	2016-10-08 08:46:21.898705647 +0200
@@ -529,15 +529,18 @@
 # A simple compile time check in gpgme.h for GNU/Linux systems that
 # prevents a file offset bits mismatch between gpgme and the application.
 NEED__FILE_OFFSET_BITS=0
+FILE_OFFSET_BITS_CPPFLAGS=
 if test "$have_w32_system" != yes; then
   case "$ac_cv_sys_file_offset_bits" in
     "" | no | unknown) ;;
     *)
     NEED__FILE_OFFSET_BITS=$ac_cv_sys_file_offset_bits
+    FILE_OFFSET_BITS_CPPFLAGS="-D_FILE_OFFSET_BITS=$ac_cv_sys_file_offset_bits"
     ;;
   esac
 fi
 AC_SUBST(NEED__FILE_OFFSET_BITS)
+AC_SUBST(FILE_OFFSET_BITS_CPPFLAGS)
 
 # Figure out platform dependent typedefs for gpgme.h
 if test "$have_w32_system" = yes; then
--- gpgme-1.7.0/lang/cpp/src/Makefile.am.orig	2016-08-24 15:59:45.000000000 +0200
+++ gpgme-1.7.0/lang/cpp/src/Makefile.am	2016-10-08 08:47:06.225371811 +0200
@@ -62,7 +62,7 @@
 libgpgmepp_la_SOURCES = $(main_sources) $(gpgmepp_headers) context_vanilla.cpp \
                         $(interface_headers) $(private_gpgmepp_headers)
 
-AM_CPPFLAGS = -I$(top_builddir)/src @GPG_ERROR_CFLAGS@ @LIBASSUAN_CFLAGS@ \
+AM_CPPFLAGS = -I$(top_builddir)/src @GPG_ERROR_CFLAGS@ @LIBASSUAN_CFLAGS@ @FILE_OFFSET_BITS_CPPFLAGS@ \
               -DBUILDING_GPGMEPP
 
 libgpgmepp_la_LIBADD = ../../../src/libgpgme.la @LIBASSUAN_LIBS@
--- gpgme-1.7.0/lang/python/setup.py.in.orig	2016-09-20 10:48:12.000000000 +0200
+++ gpgme-1.7.0/lang/python/setup.py.in	2016-10-08 09:24:35.815346124 +0200
@@ -98,9 +98,8 @@
 define_macros = []
 libs = getconfig('libs')
 
-# Define extra_macros for both the SWIG and C code
+# append extra_macros to define_macros
 for k, v in extra_macros.items():
-    extra_swig_opts.append("-D{0}={1}".format(k, v))
     define_macros.append((k, str(v)))
 
 for item in getconfig('cflags'):
@@ -113,6 +112,10 @@
         else:
             define_macros.append((defitem[0], None))
 
+# use define_macros for both the SWIG and C code
+for k,v in define_macros:
+    extra_swig_opts.append("-D{0}={1}".format(k, v))
+
 # Adjust include and library locations in case of win32
 uname_s = os.popen("uname -s").read()
 if uname_s.startswith("MINGW32"):
--- gpgme-1.7.0/lang/qt/src/Makefile.am.orig	2016-09-19 08:35:20.000000000 +0200
+++ gpgme-1.7.0/lang/qt/src/Makefile.am	2016-10-08 09:28:39.158676678 +0200
@@ -206,7 +206,7 @@
 libqgpgme_la_SOURCES = $(qgpgme_sources) $(qgpgme_headers) $(private_qgpgme_headers)
 
 AM_CPPFLAGS = -I$(top_srcdir)/lang/cpp/src -I$(top_builddir)/src \
-              @GPGME_QT_CFLAGS@ @GPG_ERROR_CFLAGS@ @LIBASSUAN_CFLAGS@ \
+              @GPGME_QT_CFLAGS@ @GPG_ERROR_CFLAGS@ @LIBASSUAN_CFLAGS@ @FILE_OFFSET_BITS_CPPFLAGS@ \
               -DBUILDING_QGPGME
 
 libqgpgme_la_LIBADD = ../../cpp/src/libgpgmepp.la ../../../src/libgpgme.la \
--- gpgme-1.7.0/lang/qt/tests/Makefile.am.orig	2016-09-20 19:09:38.000000000 +0200
+++ gpgme-1.7.0/lang/qt/tests/Makefile.am	2016-10-08 09:37:15.642004112 +0200
@@ -38,7 +38,7 @@
 
 AM_CPPFLAGS = -I$(top_srcdir)/lang/cpp/src -I$(top_builddir)/src \
               @GPG_ERROR_CFLAGS@ @GPGME_QT_CFLAGS@ @GPG_ERROR_CFLAGS@ \
-              @LIBASSUAN_CFLAGS@ @GPGME_QTTEST_CFLAGS@ -DBUILDING_QGPGME \
+              @LIBASSUAN_CFLAGS@ @GPGME_QTTEST_CFLAGS@ @FILE_OFFSET_BITS_CPPFLAGS@ -DBUILDING_QGPGME \
               -I$(top_srcdir)/lang/qt/src \
               -DTOP_SRCDIR="$(top_srcdir)"
 
